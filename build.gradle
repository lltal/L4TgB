buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.1.1'
        classpath 'io.spring.gradle:dependency-management-plugin:1.1.1'
    }
}

defaultTasks 'clean', 'build'

configure(allprojects) { project ->
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/snapshot" }
    }

    version '0.1'

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        options.encoding = "UTF-8"
    }

    dependencies {
        implementation(fileTree(dir: 'libs', include: ['*.jar']))
        implementation 'org.springframework.boot:spring-boot-starter'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'
        implementation group: 'org.telegram', name: 'telegrambots', version: '6.5.0'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
        archiveFileName = "l4fill-${project.version}.jar"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
